@model IEnumerable<GraphBar>
<svg class="graph" xmlns="http://www.w3.org/2000/svg" version="1.1" viewBox="0 0 120 60">
   <g class="graph-grid" >
      <line x1="0%"  y1="91%" x2="100%"  y2="91%"></line>
      <line x1="0%"  y1="10%" x2="0%"  y2="91%"></line>
   </g>
   @if (Model != null && Model.Count() != 0)
   {
      var iFactor = (int)80;
      var iSpace = ((int)100 / Model.Count());
      var iMax = Model.Max(x => x.Value);
      var iAvg = (int)(Model.Average(x => x.Value) / iMax * iFactor);
      var iX = 0;
      
      <g class="graph-avg" >
         <line x1="0%"  y1="@((iFactor+10)-iAvg)%" x2="100%"  y2="@((iFactor+10)-iAvg)%"></line>
      </g>
      
      foreach (var oData in Model)
      {
         var iLeft = ((int)((iX) * iSpace)) + 5;
         var iHeight = (int)(oData.Value / iMax * iFactor);
         var iTop = (iFactor+10)-iHeight;
         var sColor = (iHeight <= iAvg ? "success" : "danger");
         <rect class="graph-@(sColor)" width="7" height="@(iHeight)%" x="@(iLeft)%" y="@(iTop)%" ></rect>
         <g class="graph-label"><text x="@(iLeft)%" y="98%">@oData.Text</text></g>
         <g class="graph-value"><text x="@(iLeft)%" y="@((iFactor+8)-iHeight)%">@string.Format("{0:f2}", oData.Value).ToUpper()</text></g>
         iX++;
       }
    }
</svg>
