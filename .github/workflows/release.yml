# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
#      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
#
# 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
name: Release

on:
  push:
    branches: [ v7, 'v7.lc' ]
  # release:
  #   types: [created]

jobs:

  backend:
    name: Build Backend
    runs-on: windows-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Clean
        working-directory: 'sources/backend'
        run: |
          cd shared
          dotnet clean --configuration Release
          cd ../identity
          dotnet clean --configuration Release
          cd ../accounts
          dotnet clean --configuration Release
          cd ../main
          dotnet clean --configuration Release

      - name: Build
        working-directory: 'sources/backend/main'
        run: dotnet build --configuration Release

      - name: Publish
        working-directory: 'sources/backend/main/'
        run: dotnet publish --no-build --no-restore --configuration Release --output ../../../publish/backend

      - name: Store Packages
        uses: actions/upload-artifact@v2
        with:
          name: publish
          path: ./publish

  deploy:
    name: Deploy to Azure
    runs-on: ubuntu-latest
    needs: [backend]

    steps:

      - name: Retrieve Packages
        uses: actions/download-artifact@v2
        with:
          path: ./

      - name: Backend App
        uses: azure/webapps-deploy@v2
        with:
          app-name: friendlycashflowAPI
          publish-profile: ${{ secrets.AZURE_BACKEND_PUBLISH_PROFILE }}
          package: ./publish/backend
